{{- if .Values.jobs.volumeInit.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "orocommerce-simple.fullname" . }}-volume-init-job
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "orocommerce-simple.name" . }}
    {{- include "orocommerce-simple.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 300
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      labels:
        app: {{ include "orocommerce-simple.name" . }}-volume-init
        {{- include "orocommerce-simple.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
      - name: volume-init
        image: "oroinc/orocommerce-application:6.1.0"
        imagePullPolicy: IfNotPresent
        command: 
        - sh
        - -c
        - |
          # Exécuter l'initialisation standard avec -- true (comme dans Docker Compose)
          /usr/local/bin/docker-entrypoint.sh -- true
          
          # Créer un fichier de marqueur pour indiquer que l'initialisation est terminée
          echo "Volume initialized at $(date)" > /var/www/oro/.volume-initialized
          echo "Initialization completed successfully" >> /var/www/oro/.volume-initialized
          
          # Afficher le contenu pour debug
          cat /var/www/oro/.volume-initialized
        env:
        # Variables utilisées en externe des instances
        - name: ORO_IMAGE_TAG
          value: "6.1.0"
        - name: ORO_IMAGE
          value: "oroinc/orocommerce-application"
        - name: ORO_IMAGE_INIT
          value: "oroinc/orocommerce-application-init"
        - name: ORO_IMAGE_BASE_RUNTIME
          value: "oroinc/runtime"
        - name: ORO_BASELINE_VERSION
          value: "6.1-latest"
        
        # Variables utilisées en interne dans les instances
        - name: ORO_USER_RUNTIME
          value: "www-data"
        - name: ORO_ENV
          value: "prod"
        - name: ORO_APP_FOLDER
          value: "/var/www/oro"
        
        # Configuration de la base de données
        - name: ORO_DB_HOST
          value: "database-orocommerce"
        - name: ORO_DB_PORT
          value: "5432"
        - name: ORO_DB_NAME
          value: "orodb"
        - name: ORO_DB_USER
          value: "orodbuser"
        - name: ORO_DB_PASSWORD
          value: "orodbpass"
        - name: PGPASSWORD
          value: "orodbpass"
        volumeMounts:
        - name: oro-app-storage
          mountPath: /var/www/oro
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: oro-app-storage
        persistentVolumeClaim:
          claimName: oro-app-{{ .Release.Name }}
{{- end }} 