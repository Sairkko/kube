{{- if .Values.jobs.restoreInit.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "orocommerce-simple.fullname" . }}-restore-init
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "orocommerce-simple.name" . }}
    {{- include "orocommerce-simple.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      labels:
        app: {{ include "orocommerce-simple.name" . }}-restore-init
        {{- include "orocommerce-simple.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command: ["sh", "-c", "until nc -z database-orocommerce-simple 5432; do echo 'Waiting for database...'; sleep 5; done"]
      - name: volume-init
        image: oroinc/orocommerce-application-init:6.1.0
        command: ["sh", "-c", "cp -rp /var/www/oro/. /data && chown -R www-data:www-data /data && chmod -R 755 /data && setfacl -R -m u:www-data:rwx /data && setfacl -R -m d:u:www-data:rwx /data"]
        volumeMounts:
        - name: oro-app
          mountPath: /data
        - name: cache
          mountPath: /data/var/cache
        - name: public-storage
          mountPath: /data/public/media
        - name: private-storage
          mountPath: /data/var/private
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
      - name: restore
        image: "oroinc/orocommerce-application-init:6.1.0"
        imagePullPolicy: IfNotPresent
        command: 
        - sh
        - -c
        - |
          until nc -z database-orocommerce-simple 5432; do echo 'Waiting for database...'; sleep 5; done
          echo "Starting restore process..."
          if docker-entrypoint.sh restore; then
            echo "Restore completed successfully"
            chown -R www-data:www-data /var/www/oro
            echo "Permissions updated successfully"
          else
            echo "Restore failed, but keeping container running for debugging"
            echo "You can now exec into this container to investigate"
            tail -f /dev/null
          fi
        envFrom:
        - configMapRef:
            name: {{ include "orocommerce-simple.fullname" . }}-global-config
        volumeMounts:
        - name: oro-app
          mountPath: /var/www/oro
        - name: cache
          mountPath: /var/www/oro/var/cache
        - name: public-storage
          mountPath: /var/www/oro/public/media
        - name: private-storage
          mountPath: /var/www/oro/var/data
        resources:
          requests:
            memory: "500Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: oro-app
        persistentVolumeClaim:
          claimName: oro-app-orocommerce-simple
      - name: cache
        persistentVolumeClaim:
          claimName: cache-orocommerce-simple
      - name: public-storage
        persistentVolumeClaim:
          claimName: public-storage-orocommerce-simple
      - name: private-storage
        persistentVolumeClaim:
          claimName: private-storage-orocommerce-simple
{{- end }} 