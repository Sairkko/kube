apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "webserver.fullname" . }}-nginx-config
  labels:
    {{- include "webserver.labels" . | nindent 4 }}
data:
  nginx.conf: |
    worker_processes auto;
    worker_rlimit_nofile 50000;

    pid /var/run/nginx.pid;

    events {
      multi_accept on;
      worker_connections 30000;
    }

    http {
      include       mime.types;
      default_type  application/octet-stream;
      
      log_format extended '$http_x_real_ip - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time';
      
      access_log /dev/stdout extended;
      error_log /dev/stdout error;

      sendfile on;
      server_tokens off;

      keepalive_timeout   650s;
      keepalive_requests  10000;
      client_body_timeout 300s;
      send_timeout        30s;

      gzip              on;
      gzip_buffers      16 8k;
      gzip_comp_level   5;
      gzip_disable      msie6;
      gzip_min_length   1000;
      gzip_http_version 1.0;
      gzip_proxied      any;
      gzip_types        font/woff2 font/woff font/ttf text/plain application/javascript application/x-javascript text/javascript text/xml text/css image/svg+xml application/json;
      gzip_vary         on;

      client_body_temp_path   /var/cache/nginx/client_body_temp;
      client_max_body_size    512m;
      client_body_buffer_size 1m;
      proxy_redirect          off;
      proxy_temp_path         /var/cache/nginx/proxy_temp;
      proxy_connect_timeout   10s;
      proxy_send_timeout      180s;
      proxy_read_timeout      180s;
      proxy_buffers           32 4k;
      proxy_buffer_size       8k;
      proxy_http_version      1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Proxy "";

      fastcgi_buffer_size          128k;
      fastcgi_buffers              4 256k;
      fastcgi_busy_buffers_size    256k;
      fastcgi_connect_timeout      10s;
      fastcgi_ignore_client_abort  off;
      fastcgi_index                index.php;
      fastcgi_intercept_errors     on;
      fastcgi_read_timeout         600s;
      fastcgi_send_timeout         600s;
      fastcgi_temp_file_write_size 256k;
      fastcgi_temp_path            /var/cache/nginx/fastcgi_temp;

      include "conf.d/*.conf";
    }

  domain_com.conf: |
    server {
      listen      *:80;
      server_name _;
      
      root /var/www/oro/public;
      index index.php;
      
      access_log /dev/stdout extended;
      error_log  /dev/stdout error;

      # Main location block for OroCommerce
      location / {
        try_files $uri $uri/ /index.php$is_args$args;
      }

      # PHP processing for OroCommerce
      location ~ ^/(index|admin)\.php(/|$) {
        fastcgi_pass php-fpm-app:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $document_root;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS off;
        fastcgi_read_timeout 600s;
        fastcgi_send_timeout 600s;
        fastcgi_param APP_ENV prod;
        fastcgi_param APP_DEBUG 0;
      }

      # Static files with caching
      location ~* \.(jpg|jpeg|gif|png|ico|tiff|woff|woff2|eot|ttf|svg|svgz|mp4|ogg|ogv|webm|swf|flv|pdf|ppt|txt|bmp|rtf|webp|css|js|json)$ {
        expires 30d;
        add_header "Cache-Control" "public";
        try_files $uri =404;
        access_log off;
      }

      # Media files
      location ^~ /media/ {
        expires 3w;
        add_header "Cache-Control" "public";
        try_files $uri =404;
        access_log off;
      }

      # Bundles and build files
      location ^~ /bundles/ {
        expires 1y;
        add_header "Cache-Control" "public";
        try_files $uri =404;
        access_log off;
      }

      location ^~ /build/ {
        expires 1y;
        add_header "Cache-Control" "public";
        try_files $uri =404;
        access_log off;
      }

      # Security: deny access to sensitive files
      location ~ /\.ht {
        deny all;
      }

      location ~ /\.env {
        deny all;
      }

      location ~ /\.git {
        deny all;
      }

      # Health check endpoint
      location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
      }
    } 