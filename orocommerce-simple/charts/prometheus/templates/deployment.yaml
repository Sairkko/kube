apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prometheus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "prometheus.serviceAccountName" . }}
      containers:
        - name: prometheus
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: {{ include "prometheus.fullname" . }}-config
        - name: prometheus-storage-volume
          {{- if .Values.deployment.volume.storageClass }}
          persistentVolumeClaim:
            claimName: {{ include "prometheus.fullname" . }}-storage
          {{- else }}
          emptyDir: {}
          {{- end }}
---
{{- if .Values.deployment.volume.storageClass }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "prometheus.fullname" . }}-storage
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.deployment.volume.storageClass }}
  storageClassName: {{ .Values.deployment.volume.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.deployment.volume.size }}
{{- end }} 