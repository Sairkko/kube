apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "prometheus.fullname" . }}-config
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.config.global.scrape_interval | default "15s" }}
      evaluation_interval: {{ .Values.config.global.evaluation_interval | default "15s" }}

    rule_files:
      {{- range .Values.config.rule_files }}
      - {{ . }}
      {{- end }}

    scrape_configs:
      # Métriques des nodes Kubernetes (désactivé pour Docker Desktop)
      # - job_name: 'kubernetes-nodes'
      #   kubernetes_sd_configs:
      #     - role: node
      #   relabel_configs:
      #     - action: labelmap
      #       regex: __meta_kubernetes_node_label_(.+)
      #     - source_labels: [__meta_kubernetes_node_name]
      #       action: replace
      #       target_label: kubernetes_node_name

      # Métriques des pods OroCommerce
      - job_name: 'orocommerce-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          # Ne garder que les pods du namespace default
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: default
          # Ne garder que les pods OroCommerce
          - source_labels: [__meta_kubernetes_pod_name]
            action: keep
            regex: .*orocommerce.*
          # Ne garder que les containers principaux (pas les init containers)
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: keep
            regex: (prometheus|grafana|webserver|php-fpm-app|postgresql|ws|mail|nginx-exporter)
          # Ne garder que les pods avec annotation prometheus.io/scrape=true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          # Utiliser les annotations pour le port et le path
          - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+);(.+)
            replacement: $1:$2
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: replace
            target_label: container_name

      # Métriques des services Kubernetes
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_service_name

      # Métriques des containers (désactivé pour Docker Desktop)
      # - job_name: 'kubernetes-cadvisor'
      #   kubernetes_sd_configs:
      #     - role: node
      #   scheme: https
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #     insecure_skip_verify: true
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   relabel_configs:
      #     - action: labelmap
      #       regex: __meta_kubernetes_node_label_(.+)
      #     - source_labels: [__meta_kubernetes_node_name]
      #       action: replace
      #       target_label: kubernetes_node_name
      #   metrics_path: /metrics/cadvisor

      # Métriques d'OroCommerce (PHP-FPM) - Désactivé car pas d'endpoint de métriques
      # - job_name: 'orocommerce-php-fpm'
      #   static_configs:
      #     - targets: ['php-fpm-app:9000']
      #   metrics_path: /status
      #   params:
      #     format: ['prometheus']

      # Métriques du webserver Nginx (désactivé car pas d'endpoint de métriques)
      # - job_name: 'orocommerce-nginx'
      #   static_configs:
      #     - targets: ['webserver-orocommerce-simple:80']
      #   metrics_path: /nginx_status

      # Métriques de la base de données PostgreSQL (désactivé car pas d'endpoint de métriques)
      # - job_name: 'orocommerce-postgresql'
      #   static_configs:
      #     - targets: ['database-orocommerce-simple:5432']
      #   metrics_path: /metrics

      # Métriques de Prometheus lui-même
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090'] 